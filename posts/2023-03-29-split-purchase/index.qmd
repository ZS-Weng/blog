---
title: "Procure-to-Pay Process Analytics - Split Purchase Order red flag detection using Python"
date: "2023-02-09"
date-modified: "2023-02-09"
categories: [Finance Analytics, Python, ]
image: "procure_to_pay.jfif"
draft: True
---

## Introduction

![Image Generated with the prompt: procure to pay process represented with gold coins](procure_to_pay.jfif)

### Brief Overview of Procure to Pay Process

The procure to pay process is a commonly used term to describe the fulfillment of goods and/or services to a given requirement. It usually starts with having a purchase requsition or purchase request. This will be followed with a purchase order (PO) to be sent to the respective vendors for fulfilling the order. When the vendor/supplier provides the goods and/or service they would bill with an invoice and the purchasing organization will verify the receipt of the goods or services. At this stage there is usually a three way matching process to ensure the purchase order, goods receipt and invoice are aligned. The final step will be the actual payment of the goods and services. 

### Issues with Split Purchase Order

Splitting of purchase orders can be considered non-compliant when it is done with the intention of circumventing the organization's internal controls or policies, or to avoid the approval process required for purchases over a certain threshold.

For example, if an organization has a policy that requires purchases over a certain amount to be approved by a specific person or department, splitting a large purchase order into multiple smaller ones to avoid the approval process can be considered non-compliant. Similarly, if splitting a purchase order results in higher costs or unnecessary duplication of effort, it can be seen as a violation of procurement regulations or internal controls.

In this article, I would like to explore some useful functions in python which could help in identifying splitting of purchase orders.

Related dataset and notebook can be found in the following github link<https://github.com/ZS-Weng/Data_Engineering/tree/main/Splitting_of_Purchase>


## Logic to identify Splitting of PO


```python



```


## Additional Logic

## References

- 

## Conclusion

Thanks for reading and hope this was useful in some way!